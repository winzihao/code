class Date {
public:
	//构造函数
	Date(int year=1900, int month=1, int day=1) {
		_year = year;
		_month = month;
		_day = day;
	}

	//拷贝构造函数
	Date(const Date& d) {
		_year = d._year;
		_month = d._month;
		_day = d._day;

		cout << "Date(Date&):" << endl;
	}

	//构造函数
	Date(Date* p) {
	}

	void PrintDate() {
		cout << _year << "-" << _month << "-" << _day << endl;
	}

private:
	int _year;
	int _month;
	int _day;
};

void TestDate() {
	Date d3;
	Date d1(2019, 7, 30);
	Date d2(d1);  //调用拷贝构造函数
	d3 = d1;
}

int main() {
	
	TestDate();

	system("pause");
	return 0;
}
#endif

//浅拷贝：两个对象共用同一份地址

#if 0
//构造函数重载
class Date {
public:
	//全缺省的构造函数
	Date(int year = 1900, int month = 1, int day = 1) {
		_year = year;
		_month = month;
		_day = day;
	}

	//拷贝构造函数
	Date(const Date& d) {
		_year = d._year;
		_month = d._month;
		_day = d._day;

		cout << "Date(Date&):" << endl;
	}

	void PrintDate() {
		cout << _year << "-" << _month << "-" << _day << endl;
	}

	/*bool IsSame(const Date& d) {
	return _year == d._year &&
	_month == d._month &&
	_day == d._day;
	}*/

	//bool operator==(const Date& left, const Date& right) {
	//	return left_year == right._year &&
	//		left_month == right._month &&
	//		left_day == right._day;
	//}

