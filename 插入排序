//1.插入排序（直接插入，抓扑克牌）
//数据越接近有序，排序性能越好   InsertSort
#include<stdio.h>
#include<stdlib.h>
//[0,j-1]有序，[i+1,size-1]无序
void PrintArray(int array[], int size) {
	for (int i = 0; i < size; i++) {
		printf("%d", array[i]);
	}
	printf("\n");
}

void InsertSort(int array[], int size) {
	//一次处理一个数，需要循环size次
	//[0,i-1]有序，要处理[i],[i+1,size-1]无序
	for (int i = 0; i < size; i++) {
		//遍历整个有序区间[0,i-1]
		int j = i;
		for (j = 0; j <= i - 1 && array[j] <= array[i]; j++)
			//吧array[i]插进去
		if (j != i) {
			//看做把array[i]插入到[0,i-1]的顺序表里
			//插入的的下标是j
			int key = array[i];
			for (int k = i; k>j; k--) {
				array[k] = array[k - 1];
			}
			array[j] = key;
		}
	}
}
void Test() {
	int array[] = { 9, 4, 3, 7, 2, 5, 8, 8, 7, 1, 3 };
	int size = sizeof(array) / sizeof(int);

	PrintArray(array, size);
	InsertSort(array, size);
	PrintArray(array, size);
}

int main() {
	Test();
	system("pause");
	return 0;
}
